var searchIndex = new Map(JSON.parse('[\
["docs",{"doc":"","t":"CCCCPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNN","n":["objects","runnner","scanner","tokens","AND","BANG","BANGEQUAL","CLASS","COMMA","DOT","ELSE","EOF","EQUAL","EQUALEQUAL","FALSE","FOR","FUN","GREATER","GREATEREQUAL","IDENTIFIER","IF","LEFTBRACE","LEFTPAREN","LESS","LESSEQUAL","LiteralType","MINUS","NIL","NONE","NUMBER","NUMBER","OR","PLUS","PRINT","RETURN","RIGHTBRACE","RIGHTPAREN","SEMICOLON","SLASH","STAR","STRING","STRING","SUPER","THIS","TRUE","Token","TokenType","VAR","WHILE","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","read_args","run","Scanner","TokenVec","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","into","into","new","scan_token","scan_tokens","set_source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"docs"],[3,"docs::objects"],[4,"docs::objects::tokens"],[77,"docs::runnner"],[79,"docs::scanner"],[104,"core::fmt"],[105,"core::fmt"],[106,"core::result"],[107,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Token struct for each lexeme","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The scanner takes in raw source code as a series of …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new Scanner instance with the provided source …","","Start scanning in the source string","Setter for source in Scanner","","","","","","","",""],"i":[0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,1,1,4,4,4,4,4,4,4,4,4,4,1,4,4,4,4,0,0,4,4,1,4,5,1,4,5,1,4,4,5,5,1,4,5,1,4,5,4,5,1,4,5,1,4,5,1,4,5,0,0,0,0,10,11,10,11,10,11,11,10,11,10,11,10,10,10,10,10,11,10,11,10,11,10,11],"f":"`````````````````````````````````````````````````{ce{}{}}00000{{bd}f}{{hd}f}0{{jd}f}0{cc{}}00444{cl{}}0{c{{n{e}}}{}{}}00000{cA`{}}00{{}Ab}0``8888{{Add}f}{{Afd}f}066::{{}Ad}{AdAb}0{{Adl}Ab}88777766","c":[],"p":[[6,"LiteralType",4],[5,"Formatter",104],[8,"Result",104],[6,"TokenType",4],[5,"Token",4],[5,"String",105],[6,"Result",106],[5,"TypeId",107],[1,"unit"],[5,"Scanner",79],[5,"TokenVec",79]],"b":[[56,"impl-Debug-for-TokenType"],[57,"impl-Display-for-TokenType"],[58,"impl-Debug-for-Token"],[59,"impl-Display-for-Token"],[86,"impl-Debug-for-TokenVec"],[87,"impl-Display-for-TokenVec"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
